<?xml version="1.0" encoding="utf-8"?>
<BinaryMappings>
	<Mappings Version="2.0.119.430" Default="true">
		<DllImport Symbol="IgSetWarningCallback" Module="iggy_w64.dll" Proc="IggySetWarningCallback" />
		<DllImport Symbol="IgSetTraceCallbackUTF8" Module="iggy_w64.dll" Proc="IggySetTraceCallbackUTF8" />
		<DllImport Symbol="IgPlayerCallMethod" Module="iggy_w64.dll" Proc="IggyPlayerCallMethodRS" />
		<DllImport Symbol="IgPlayerCreateFastNameUTF8" Module="iggy_w64.dll" Proc="IggyPlayerCreateFastNameUTF8" />
		
		<Mapping Name="ls::UIObjectManager::CreateUIObject">
			48 8b cf
			48 c7 44 24 28 80 00 00 00
			c7 44 24 20 20 1e 00 00
			@func e8 ?? ?? ?? ?? // CALL       ls::UIObjectManager::CreateUIObject              ObjectHandle CreateUIObject
			<Target Type="Indirect" Offset="@func" Symbol="UIObjectManager__CreateUIObject" /> <!-- ls::UIObjectManager::CreateUIObject -->
		</Mapping>
		<Mapping Name="ls::UIObjectManager::GetUIObjectByType">
			74 38 // JZ
			48 8b 0d c8 6f ad 00 // MOV
			ba 5e 00 00 00 // MOV
			@func e8 46 c3 f4 ff // CALL
			<Target Type="Indirect" Offset="@func" Symbol="UIObjectManager__GetUIObjectByType" /> <!-- ls::UIObjectManager::GetUIObjectByType -->
		</Mapping>
		<Mapping Name="ls::UIObjectManager">
			@instance 48 8b 0d ?? ?? ?? ?? // MOV UIObjectManager
			4d 8b c4 // MOV
			ba 04 00 00 00 // MOV
			48 81 c1 e0 00 00 00 // ADD
			@register e8 ?? ?? ?? ?? // CALL RegisterUIObjectCreator
			<Target Type="Indirect" Offset="@instance" Symbol="UIObjectManager__Instance" />
			<Target Type="Indirect" Offset="@register" Symbol="UIObjectManager__RegisterUIObjectCreator" />
			<!-- ls::UIObjectManager -->
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetFireResistance">
			ff 15 95 35 2f 00 //        CALL       qword ptr [->MSVCR120.DLL::_stricmp]             = 0127fa30
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9619
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 fb 0b 14 00 //        CALL       CDvinityStats_Character::GetFireResistance       undefined GetFireResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetFireResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetEarthResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce964f
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 75 1a 14 00 //       CALL       CDivinityStats_Character::GetEarthResistance     undefined GetEarthResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetEarthResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetWaterResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9685
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 9f 10 14 00 //       CALL       CDivinityStats_Character::GetWaterResistance     undefined GetWaterResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetWaterResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetAirResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce96bb
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 79 15 14 00 //       CALL       CDivinityStats_Character::GetAirResistance       undefined GetAirResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetAirResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetPoisonResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce96f1
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 e7 25 14 00 //       CALL       CDivinityStats_Character::GetPoisonResistance    undefined GetPoisonResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetPoisonResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetPiercingResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9727
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 b1 20 14 00 //       CALL       CDivinityStats_Character::GetPiercingResistance  undefined GetPiercingResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetPiercingResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetCrushingResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce975d
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 fb 22 14 00 //      CALL       CDivinityStats_Character::GetCrushingResistance  undefined GetCrushingResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetCrushingResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetSlashingResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9793
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 c5 1d 14 00 //      CALL       CDivinityStats_Character::GetSlashingResistance  undefined GetSlashingResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetSlashingResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetShadowResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce97c9
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 0f 28 14 00 //      CALL       CDivinityStats_Character::GetShadowResistance    undefined GetShadowResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetShadowResistance" />
		</Mapping>
		<Mapping Name="EoCFree">
			48 83 7b 18 10 //       CMP        qword ptr [RBX + 0x18],0x10
			72 08 //          JC         LAB_14002dbfc
			48 8b 0b //       MOV        RCX,qword ptr [RBX]
			@free e8 a4 41 6e 00 //       CALL       FUN_140711da0
			<Target Type="Indirect" Offset="@free" Symbol="EoCFree" />
		</Mapping>
		<Mapping Name="EoCAlloc">
			40 53 //          PUSH       RBX
			48 83 ec 20 //    SUB        RSP,0x20
			48 8b d9 //       MOV        RBX,RCX
			c7 01 43 00 00 00 //       MOV        dword ptr [RCX],0x43
			c7 41 10 00 00 00 00 //       MOV        dword ptr [RCX + 0x10],0x0
			b9 18 02 00 00 //       MOV        ECX,0x218
			@alloc e8 f0 78 db ff //       CALL       ls::GlobalAllocator::Malloc_m                    undefined Malloc_m()
			<Target Type="Indirect" Offset="@alloc" Symbol="EoCAlloc" />
		</Mapping>
		<Mapping Name="ls::ObjectFactory__ecl_Character">
			74 2e //          JZ         LAB_140aa7057
			@factory 48 8b 15 58 79 8a 00 //       MOV        RDX,qword ptr [ls_ObjectFactory__ecl_Character]  = ??
			0f b7 c8 //       MOVZX      ECX,AX
			3b 4a 24 //       CMP        ECX,dword ptr [RDX + 0x24]
			73 1f //          JNC        LAB_140aa7057
			48 8b 4a 40 //    MOV        RCX,qword ptr [RDX + 0x40]
			44 0f b7 f8 //    MOVZX      R15D,AX
			c1 e8 10 //       SHR        EAX,0x10
			66 23 c7 //       AND        AX,DI
			66 42 3b 04 79 //       CMP        AX,word ptr [RCX + R15*0x2]
			75 0a //          JNZ        LAB_140aa7057
			48 8b 42 18 //    MOV        RAX,qword ptr [RDX + 0x18]
			4e 8b 3c f8 //    MOV        R15,qword ptr [RAX + R15*0x8]
			eb 03 //          JMP        LAB_140aa705a
			<Target Type="Indirect" Offset="@factory" Symbol="ObjectFactory__ecl_Character" />
		</Mapping>
		<Mapping Name="ecl::PickingHelper::DoPick">
			49 8b 40 18 //    MOV        RAX,qword ptr [R8 + 0x18]
			4a 83 3c d0 00 //      CMP        qword ptr [RAX + R10*0x8],0x0
			75 12 //          JNZ        LAB_140882b3d
			41 89 4e 6c //    MOV        dword ptr [R14 + 0x6c],param_1
			49 8b ce //       MOV        param_1,R14
			@call e8 39 62 0f 00 //      CALL       ecl::PickingHelper::DoPick                       undefined DoPick()
			8b 0d 9b a0 a6 00 //      MOV        param_1,dword ptr [DAT_1412ecbd8]                = ??
			<Target Type="Indirect" Offset="@call" Symbol="ecl_PickingHelper_DoPick" />
		</Mapping>
		<Mapping Name="esv::ItemHelpers::GenerateTreasureItem">
			48 8d 0c 1e //    LEA        param_1,[RSI + RBX*0x1]
			41 8b d7 //       MOV        param_2,R15D
			bf 01 00 00 00 //      MOV        EDI,0x1
			@call e8 9f ef 0c 00 //      CALL       esv::ItemHelpers::GenerateTreasureItem           esv::Item * GenerateTreasureItem
			48 8b d8 //       MOV        RBX,RAX
			48 85 c0 //       TEST       RAX,RAX

			<Target Type="Indirect" Offset="@call" Symbol="esv_ItemHelpers_GenerateTreasureItem" />
		</Mapping>
		<Mapping Name="ecl::EocUIControl::OpenExamineUI">
			@EocUIControlRef 48 8b 0d 6a a5 93 00 //       MOV        targetAction,qword ptr [EoCUIControl]            = ??
			4c 8d 45 6f //    LEA        param_3=>local_res10,[RBP + 0x6f]
			41 0f b7 d6 //    MOVZX      character,R14W
			@call e8 2d 32 e5 ff //      CALL       ecl::UIExamine::OpenExamineUI                    void OpenExamineUI(EocUIControl
			<Target Type="Indirect" Offset="@call" Symbol="ecl_EocUIControl_OpenExamineUI" />
			<Target Type="Indirect" Offset="@EocUIControlRef" Symbol="ecl_EocUIControl" />
		</Mapping>
		<Mapping Name="ls_InputManager_InjectInput">
			45 33 c0 //       XOR        R8D,R8D
			48 8b ce //       MOV        param_1,RSI
			@call e8 43 e3 ff ff //       CALL       ls::InputManager::InjectInput                    undefined InjectInput(InputManag
			<Target Type="Indirect" Offset="@call" Symbol="ls_InputManager_InjectInput" />
		</Mapping>
		<Mapping Name="esv_ActivationManager">
			0f 84 c0 00 00 00 //      JZ         LAB_140c07559
			@ref 48 8b 0d c8 75 74 00 //      MOV        RCX,qword ptr [esv_ActivationManager]            = NaP
			48 8b d3 //       MOV        RDX,RBX
			e8 78 3a 03 00 //      CALL       FUN_140c3af20                                    undefined FUN_140c3af20()
			48 83 bf 30 01 00 00 00 //       CMP        qword ptr [RDI + 0x130],0x0
			<Target Type="Indirect" Offset="@ref" Symbol="esv_ActivationManager" />
		</Mapping>
		<Mapping Name="SendItemUsedOsirisEvent">
			4c 8b c0 //       MOV        param_3,RAX
			@call e8 89 b9 05 00 //      CALL       SendOsirisItemUsedEvent_wut                      undefined SendOsirisItemUsedEven
			48 8b 0d 2a 3e 7a 00 //      MOV        param_1,qword ptr [DAT_14134ea78]                = ??
			4d 8b c7 //       MOV        param_3,R15
			49 8b d6 //       MOV        param_2,R14
			e8 17 36 08 00 //      CALL       FUN_140c2e270                                    undefined FUN_140c2e270()
			<Target Type="Indirect" Offset="@call" Symbol="esv_OsirisCharacterFunctions_SendItemUsedEvent" />
		</Mapping>
		<Mapping Name="esv::ActivationManager::ThrowOnCharacterItemEvent">
			4c 89 74 24 50 //      MOV        qword ptr [RSP + local_res18],R14
			@call e8 7f a2 03 00 //      CALL       esv::ActivationManager::ThrowOnCharacterItemEv   undefined ThrowOnCharacterItemEv
			48 8b 0d 68 d3 74 00 //      MOV        param_1,qword ptr [DAT_14134ead0]                = ??
			48 85 ff //       TEST       RDI,RDI
			74 0c //          JZ         LAB_140c01779
			<Target Type="Indirect" Offset="@call" Symbol="esv_ActivationManager_ThrowOnCharacterItemEvent" />
		</Mapping>
		<Mapping Name="OsirisCharacterEventManager">
			e8 15 60 08 00 //      CALL       FUN_140c30c20                                    undefined FUN_140c30c20()
			@ref 48 8b 35 d6 3e 7a 00 //      MOV        RSI,qword ptr [osiriseventmanager]               = ??
			49 8b 07 //       MOV        RAX,qword ptr [R15]
			48 8d 54 24 70 //      LEA        param_2=>local_2c8,[RSP + 0x70]
			49 8b cf //       MOV        param_1,R15
			<Target Type="Indirect" Offset="@ref" Symbol="OsirisCharacterEvents" />
		</Mapping>
		<Mapping Name="ecl::UIExamine::SetupInformation Loremaster patch">
			48 8b 5c 24 38 //      MOV        RBX,qword ptr [RSP + local_9f0]
			@patch 85 f6 //          TEST       ESI,ESI
			41 0f 48 f4 //    CMOVS      ESI,R12D
			89 74 24 48 //    MOV        dword ptr [RSP + loremaster],ESI
			eb 53 //          JMP        LAB_140950865
			<Patch Type="Absolute" Offset="@patch">
				be 05 00 00 00 90
			</Patch>
		</Mapping>
		<Mapping Name="ecl::UIExamine::SetupInformation">
			e8 88 93 ff ff //      CALL       FUN_14094dc10                                    undefined FUN_14094dc10()
			41 0f b6 d7 //    MOVZX      objectHandle,R15B
			48 8b cf //       MOV        param_1,RDI
			@call e8 cc bc ff ff //      CALL       ecl::UIExamine::SetupInformation                 void SetupInformation(ecl::UIExa
			48 8b 4f 18 //    MOV        param_1,qword ptr [RDI + 0x18]
			44 88 bf e8 00 00 00 //      MOV        byte ptr [RDI + 0xe8],R15B
			<Target Type="Indirect" Offset="@call" Symbol="ecl_UIExamine_SetupInformation" />
		</Mapping>
		<Mapping Name="esv::Character::AddExperience patch">
			48 8b 05 c8 a3 73 00 //      MOV        RAX,qword ptr [ls_GlobalSwitches]                = NaP
			8b 88 38 01 00 00 //      MOV        character,dword ptr [RAX + 0x138]
			83 c1 fe //       ADD        character,-0x2
			83 f9 01 //       CMP        character,0x1
			@patch 0f 86 21 09 00 00 //      JBE        LAB_140ba80ab
			<Patch Type="Absolute" Offset="@patch">
				90 90 90 90 90 90
			</Patch>
		</Mapping>
		<Mapping Name="ecl::Character::AddExperience patch">
			48 8b 05 18 e0 a4 00 //      MOV        RAX,qword ptr [ls_GlobalSwitches]                = NaP
			8b 88 38 01 00 00 //      MOV        character,dword ptr [RAX + 0x138]
			83 c1 fe //       ADD        character,-0x2
			83 f9 01 //       CMP        character,0x1
			@patch 0f 86 79 09 00 00 //      JBE        LAB_1408944b3
			<Patch Type="Absolute" Offset="@patch">
				90 90 90 90 90 90
			</Patch>
		</Mapping>
		<Mapping Name="ecl::InventoryFactory">
			@ref 48 8b 15 8b 2e aa 00 //      MOV        param_2,qword ptr [ObjectFactory__ecl_Inventory] = ??
			0f b7 c8 //       MOVZX      item,AX
			3b 4a 24 //       CMP        item,dword ptr [param_2 + 0x24]
			0f 83 4d 01 00 00 //      JNC        LAB_1408abc06
			48 8b 4a 40 //    MOV        item,qword ptr [param_2 + 0x40]
			44 0f b7 c0 //    MOVZX      param_3,AX
			<Target Type="Indirect" Offset="@ref" Symbol="ecl_InventoryFactory" />
		</Mapping>
		<Mapping Name="esv::InventoryFactory">
			74 3c //          JZ         LAB_140b9dc40
			a9 00 00 ff 03 //      TEST       EAX,0x3ff0000
			74 35 //          JZ         LAB_140b9dc40
			@ref 48 8b 15 36 0f 7b 00 //      MOV        param_2,qword ptr [esv_Inventory_Factory]        = ??
			0f b7 c8 //       MOVZX      param_1,AX
			3b 4a 24 //       CMP        param_1,dword ptr [RDX + param_2->field26_0x24]
			73 26 //          JNC        LAB_140b9dc40
			<Target Type="Indirect" Offset="@ref" Symbol="esv_InventoryFactory" />
		</Mapping>
		<Mapping Name="ecl::ItemProtocol::UpdateItems">
			49 8b cd //       MOV        RCX,R13
			@call e8 13 d1 ff ff //      CALL       ecl::ItemProtocol::UpdateItems
			b8 01 00 00 00 //      MOV        EAX,0x1
			e9 f0 04 00 00 //      JMP        LAB_140a39267
			<Target Type="Indirect" Offset="@call" Symbol="ecl_ItemProtocol_UpdateItems" />
		</Mapping>
		<Mapping Name="ecl::KeywordControl::ShowUIDialog camera patch">
			e8 ae 45 f8 ff //      CALL       FUN_140870700                                    undefined FUN_140870700()
			48 8b 0d //       MOV        RCX,qword ptr [ecl_PlayerManager]                = ??
			1f 5a 9f 00 0f b7 d3 // MOVZX      EDX,playerID
			e8 ff e7 f8 ff //      CALL       ecl::PlayerManager::GetCamera                    undefined GetCamera()
			@patch 80 88 c8 03 00 00 04 //      OR         byte ptr [camera + 0x3c8],0x4
			<Patch Type="Absolute" Offset="@patch">
				80 88 c8 03 00 00 00
			</Patch>
		</Mapping>
		<Mapping Name="ecl::UIBottomBar::FillIconBuffer patch">
			8d 3c 80 //       LEA        EDI,[RAX + RAX*0x4]
			03 ff //          ADD        index,index
			@patch 8d 6f 0a //       LEA        EBP,[index + 0xa]
			3b fd //          CMP        index,EBP
			0f 83 de 01 00 00 //      JNC        LAB_140a1ce0a
			<Patch Type="Absolute" Offset="@patch">
				8d 6f 14
			</Patch>
		</Mapping>
		<Mapping Name="ecl::UIKeyboardBottomBar::ctor patch">
			@patch1 41 8d 4c 24 d8 //      LEA        param_1,[R12 + -0x28]
			48 89 87 70 01 00 00 //      MOV        qword ptr [RDI + 0x170],RAX
			48 8d 05 4e f4 66 00 //      LEA        RAX,[PTR_FUN_14108f7b8]                          = 1401d6140
			48 89 87 68 01 00 00 //      MOV        qword ptr [RDI + 0x168],RAX=>PTR_FUN_14108f7b8   = 1401d6140
			4c 89 af a0 01 00 00 //      MOV        qword ptr [RDI + 0x1a0],R13
			e8 63 e6 60 ff //      CALL       CreateIconAtlasDrawStruct                        FixedString * CreateIconAtlasDra
			48 89 87 90 01 00 00 //      MOV        qword ptr [RDI + 0x190],RAX
			@patch2 48 c7 87 98 01 00 00 0a 00 00 00 //      MOV        qword ptr [RDI + 0x198],0xa
			<Patch Type="Absolute" Offset="@patch1">
				41 8d 4c 24 e2
			</Patch>
			<Patch Type="Absolute" Offset="@patch2">
				48 c7 87 98 01 00 00 14 00 00 00
			</Patch>
		</Mapping>
		<Mapping Name="ecl::UIBottomBar::SetSlot patch">
			49 8b f0 //       MOV        RSI,param_3
			44 8b f2 //       MOV        R14D,param_2
			8d 1c 80 //       LEA        EBX,[RAX + RAX*0x4]
			48 8b e9 //       MOV        RBP,param_1
			03 db //          ADD        EBX,EBX
			@patch 44 8d 7b 0a //    LEA        R15D,[RBX + 0xa]
			41 3b df //       CMP        EBX,R15D
			73 5c //          JNC        LAB_140a1f01d
			<Patch Type="Absolute" Offset="@patch">
				44 8d 7b 14
			</Patch>
		</Mapping>
		<Mapping Name="ecl::UIBottomBar::UpdateSlots patch">
			@patch 8d 48 0a //       LEA        param_1,[RAX + 0xa]
			89 44 24 28 //    MOV        dword ptr [RSP + local_150],EAX
			89 4c 24 2c //    MOV        dword ptr [RSP + stopIndex],param_1
			3b c1 //          CMP        EAX,param_1
			0f 83 45 07 00 00 //      JNC        LAB_140a20164
			<Patch Type="Absolute" Offset="@patch">
				8d 48 14
			</Patch>
		</Mapping>
		<Mapping Name="ecl::UIBottomBar::UpdateSlots and UpdateSlotCooldowns">
			@call1 e8 ae d6 ff ff //      CALL       ecl::UIBottomBar::UpdateSlotCooldowns            undefined UpdateSlotCooldowns()
			f6 86 bc 01 00 00 08 //      TEST       byte ptr [RSI + 0x1bc],0x8
			74 08 //          JZ         LAB_140a21eb3
			48 8b ce //       MOV        param_1,RSI
			@call2 e8 5d da ff ff //      CALL       ecl::UIBottomBar::UpdateSlots                    undefined UpdateSlots(ecl::UIBot
			<Target Type="Indirect" Offset="@call1" Symbol="ecl_UIBottomBar_UpdateSlotCooldowns" />
			<Target Type="Indirect" Offset="@call2" Symbol="ecl_UIBottomBar_UpdateSlots" />
		</Mapping>
		<Mapping Name="ecl::UIBottomBar::UpdateSlots2 patch">
			e8 16 fc ff ff //      CALL       ecl::UIBottomBar::UpdateSpecificSlot             undefined UpdateSpecificSlot(ecl
			ff c3 //          INC        EBX
			@patch 83 fb 0a //       CMP        EBX,0xa
			72 ef //          JC         LAB_140a1f520
			<Patch Type="Absolute" Offset="@patch">
				83 fb 14
			</Patch>
		</Mapping>
		<Mapping Name="ecl::UIBottomBar::UpdateSlots2">
			49 8b cf //       MOV        param_1,R15
			@call e8 5f f3 ff ff //      CALL       ecl::UIBottomBar::UpdateSlots2                   undefined UpdateSlots2(ecl::UIBo
			48 83 7d 88 08 //      CMP        qword ptr [RBP + local_f0],0x8
			72 0a //          JC         LAB_140a201b2
			48 8b 4c 24 70 //      MOV        param_1,qword ptr [RSP + local_108]
			<Target Type="Indirect" Offset="@call" Symbol="ecl_UIBottomBar_UpdateSlots2" />
		</Mapping>
		<Mapping Name="ecl::UIBottomBar::UpdateSlotCooldowns patch">
			@patch 8d 75 0a //       LEA        ESI,[RBP + 0xa]
			4c 8b 04 d0 //    MOV        R8,qword ptr [RAX + RDX*0x8]
			4c 89 54 24 20 //      MOV        qword ptr [RSP + local_b8],R10
			89 b4 24 e0 00 00 00 //      MOV        dword ptr [RSP + local_res8],ESI
			4d 85 c0 //       TEST       R8,R8
			74 21 //          JZ         LAB_140a1f63f
			<Patch Type="Absolute" Offset="@patch">
				8d 75 14
			</Patch>
		</Mapping>
		<Mapping Name="ls::GlobalSwitches">
			e8 8e b3 90 ff //      CALL       FUN_140030510                                    undefined FUN_140030510()
			@instance 48 8b 15 b7 c9 bb 00 //       MOV        RDX,qword ptr [ls_GlobalSwitches]                = NaP
			48 83 c2 58 //    ADD        RDX,0x58
			<Target Type="Indirect" Offset="@instance" Symbol="GlobalSwitches" />
		</Mapping>
		<Mapping Name="ecl::PartyManager">
			@ref 48 8b 0d 24 9c 97 00 //      MOV        RCX,qword ptr [ecl_PartyManager]                 = ??
			e8 b7 c9 f1 ff //      CALL       FUN_1408f1690                                    undefined FUN_1408f1690()
			84 c0 //          TEST       AL,AL
			75 2d //          JNZ        LAB_1409d4d0a
			<Target Type="Indirect" Offset="@ref" Symbol="ecl_PartyManager" />
		</Mapping>
		<Mapping Name="ecl::PlayerManager">
			@ref 48 8b 0d af 24 a7 00 //      MOV        param_1,qword ptr [ecl_PlayerManager]            = ??
			0f b7 da //       MOVZX      EBX,playerId
			@func e8 4f ca 00 00 //      CALL       GetCharacterByPlayerID                           ecl::Character * GetCharacterByP
			48 8b f8 //       MOV        RDI,RAX
			48 85 c0 //       TEST       RAX,RAX
			0f 84 ae 00 00 00 //      JZ         LAB_14086f78b
			<Target Type="Indirect" Offset="@ref" Symbol="ecl_PlayerManager" />
			<Target Type="Indirect" Offset="@func" Symbol="ecl_PlayerManager_GetCharacterByPlayerID" />
		</Mapping>
		<Mapping Name="GetOsirisSaveFileVersion">
			@func e8 b3 03 00 00
			85 c0 //          TEST       EAX,EAX
			0f 84 12 02 00 00 //      JZ         LAB_140c0cdb7
			<Target Type="Indirect" Offset="@func" Symbol="GetOsirisSaveFileVersion" />
		</Mapping>
		<Mapping Name="RunStoryPatch">
			@func e8 61 2b 00 00 //      CALL       esv::StoryImplementation::RunStoryPatch          undefined RunStoryPatch()
			84 c0 //          TEST       AL,AL
			0f 84 b2 02 00 00 //      JZ         LAB_140c0cef9
			<Target Type="Indirect" Offset="@func" Symbol="RunStoryPatch" />
		</Mapping>
		<Mapping Name="storypatch patch">
			e8 b3 03 00 00 //      CALL       GetOsirisSaveFileVersion                         undefined GetOsirisSaveFileVersi
			@patch 85 c0 //          TEST       EAX,EAX
			0f 84 12 02 00 00 //      JZ         LAB_140c0cdb7
			3b c7 //          CMP        EAX,EDI
			0f 86 0a 02 00 00 //      JBE        LAB_140c0cdb7
			<Patch Type="Absolute" Offset="@patch">
				90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
			</Patch>
		</Mapping>
		<Mapping Name="ecl::LevelManager">
			75 2e //          JNZ        LAB_140b23c7c
			@ref 48 8b 05 c3 ac 82 00 //      MOV        RAX,qword ptr [ecl::LevelManager]                = NaP
			48 83 78 08 00 //      CMP        qword ptr [RAX + 0x8],0x0
			0f 84 a1 08 00 00 //      JZ         LAB_140b24501
			<Target Type="Indirect" Offset="@ref" Symbol="ecl_LevelManager" />
		</Mapping>
		<Mapping Name="ecl::EoCClient">
			@ref 48 8b 05 11 1c 92 00 //      MOV        RAX,qword ptr [ecl::EoCClient]                   = NaP
			33 ff //          XOR        EDI,EDI
			4d 8b e9 //       MOV        R13,R9
			4c 8b 78 48 //    MOV        R15,qword ptr [RAX + 0x48]
			41 8b 41 08 //    MOV        EAX,dword ptr [R9 + 0x8]
			4c 8b e1 //       MOV        R12,RCX
			05 64 ff ff ff //      ADD        EAX,0xffffff64
			89 7c 24 38 //    MOV        dword ptr [RSP + local_200],EDI
			83 f8 0a //       CMP        EAX,0xa
			0f 87 00 05 00 00 //      JA         switchD_140a2cc4c::caseD_9d
			<Target Type="Indirect" Offset="@ref" Symbol="ecl_EoCClient" />
		</Mapping>
		<Mapping Name="esv_ScriptParam entity Getters">
			48 8b c8 //       MOV        RCX,RAX
			@itemgetter e8 cf 28 02 00 //      CALL       esv::ScriptParam::GetItem                        esv::Item * GetItem(esv::ScriptP
			eb 08 //          JMP        LAB_140bb950b
			48 8b c8 //       MOV        RCX,RAX
			@charactergetter e8 45 26 02 00 //      CALL       esv::ScriptParam::GetCharacter                   esv::Character * GetCharacter(es
			<Target Type="Indirect" Offset="@itemgetter" Symbol="esv_ScriptParam_GetItem" />
			<Target Type="Indirect" Offset="@charactergetter" Symbol="esv_ScriptParam_GetCharacter" />
		</Mapping>
		<Mapping Name="ecl_Party_RequestDetach">
			f3 0f 11 44 24 40 //     MOVSS      dword ptr [RSP  + local_218 ],XMM0
			@call e8 20 75 f9 ff //     CALL       ecl::Party::RequestDetach                        undefined RequestDetach()
			48 8b 05 e1 b6 9c 00 //     MOV        RAX ,qword ptr [DAT_1412ee708 ]                   = ??
			48 8b 88 98 00 00 00 //     MOV        RCX ,qword ptr [RAX  + 0x98 ]
			4c 8d 05 03 84 75 00 //     LEA        R8,[s_UI_Game_Party_Split_14107b438 ]            = "UI_Game_Party_Split"


			<Target Type="Indirect" Offset="@call" Symbol="ecl_Party_RequestDetach" />
		</Mapping>
		<Mapping Name="ecl_Party_AddToGroup">
			f3 0f 11 44 24 40 //     MOVSS      dword ptr [RSP  + local_218 ],XMM0
			@call e8 dc 70 f9 ff //     CALL       ecl::Party::AddToGroup                           undefined AddToGroup(ecl::Party
			48 8b 05 3d b6 9c 00 //    MOV        RAX ,qword ptr [DAT_1412ee708 ]                   = ??
			4c 8d 05 3e 84 75 00 //     LEA        R8,[s_UI_Game_Party_Merge_14107b510 ]            = "UI_Game_Party_Merge"
			<Target Type="Indirect" Offset="@call" Symbol="ecl_Party_AddToGroup" />
		</Mapping>
		<Mapping Name="esv::CharacterManager">
			@ref 48 8b 15 a6 50 7b 00 //      MOV        RDX,qword ptr [ls_ObjectFactory__esv_Character]  = ??
			0f b7 c8 //       MOVZX      ECX,AX
			3b 4a 24 //       CMP        ECX,dword ptr [RDX + 0x24]
			0f 83 26 01 00 00 //      JNC        LAB_140b99bf4
			<Target Type="Indirect" Offset="@ref" Symbol="ObjectFactory__esv_Character" />
		</Mapping>
		<Mapping Name="ecl::ItemManager">
			@ref 48 8b 0d f5 53 a1 00 //      MOV        RCX,qword ptr [ls_ObjectFactory__ecl_Item]       = ??
			48 8d 54 24 40 //      LEA        RDX=>local_de8,[RSP + 0x40]
			f3 0f 11 44 24 40 //      MOVSS      dword ptr [RSP + local_de8],XMM0
			e8 dd 83 7e ff //      CALL       FUN_140121920                                    undefined FUN_140121920()
			48 8b d0 //       MOV        RDX,RAX
			<Target Type="Indirect" Offset="@ref" Symbol="ObjectFactory__ecl_Item" />
		</Mapping>
		<Mapping Name="esv::ItemManager">
			0f 84 c3 00 00 00 //      JZ         LAB_140c01edc
			41 8b 04 24 //    MOV        EAX,dword ptr [R12]
			@ref 48 8b 0d 2c cd 74 00 //      MOV        param_1,qword ptr [ls_ObjectFactory__esv_Item]   = ??
			48 8d 54 24 50 //      LEA        param_2=>local_res8,[RSP + 0x50]
			89 44 24 50 //    MOV        dword ptr [RSP + local_res8],EAX
			e8 4e 7b 65 ff //      CALL       FUN_140259980                                    undefined FUN_140259980()
			<Target Type="Indirect" Offset="@ref" Symbol="ObjectFactory__esv_Item" />
		</Mapping>
		<Mapping Name="esv::PartyManager">
			@ref 48 8b 0d a3 a0 69 00 //      MOV        RCX,qword ptr [esv_PartyManager]                 = ??
			48 8d 54 24 30 //      LEA        RDX=>local_88,[RSP + 0x30]
			f3 0f 11 44 24 30 //      MOVSS      dword ptr [RSP + local_88],XMM0
			f3 0f 10 45 40 //      MOVSS      XMM0,dword ptr [RBP + 0x40]
			f3 0f 11 4c 24 34 //      MOVSS      dword ptr [RSP + local_88+0x4],XMM1
			f3 0f 11 44 24 38 //      MOVSS      dword ptr [RSP + local_80],XMM0
			e8 72 6a f4 ff //      CALL       FUN_140bfb4e0                                    undefined FUN_140bfb4e0()
			<Target Type="Indirect" Offset="@ref" Symbol="esv_PartyManager" />
		</Mapping>
		<Mapping Name="esv::ScriptParam::DontCare">
			41 80 e6 01 //    AND        R14B,0x1
			@ref 48 3b 0d 84 69 70 00 //      CMP        param_1,qword ptr [esv_ScriptParam_DontCare]     = ??
			48 8b f9 //       MOV        RDI,param_1
			75 14 //          JNZ        LAB_140bdc92d                                 undefined FUN_140bfb4e0()
			<Target Type="Indirect" Offset="@ref" Symbol="esv_ScriptParam_DontCare" />
		</Mapping>
		<Mapping Name="ecl::GameStateEventManager::ExecuteGameStateChangedEvent">
			74 0e //          JZ         LAB_140876ecd
			48 8b 0d 82 7a ad 00 //      MOV        param_1,qword ptr [DAT_14134e948]                = ??
			8b d6 //          MOV        param_2,ESI
			@call e8 93 bd 06 00 //      CALL       ecl::GameStateEventManager::ExecuteGameStateCh   undefined ExecuteGameStateChange
			<Target Type="Indirect" Offset="@call" Symbol="ecl_GameStateEventManager_ExecuteGameStateChangedEvent" />
		</Mapping>
		<Mapping Name="esv::ScriptParamPool::Release">
			48 8b 1d 33 3b 70 00 //      MOV        RBX,qword ptr [Pool_esv_ScriptParam_m]           = ??
			ff 50 08 //       CALL       qword ptr [RAX + 0x8]
			48 8d 4b 28 //    LEA        RCX,[RBX + 0x28]
			48 8b d7 //       MOV        RDX,RDI
			@call e8 d4 40 69 ff //      CALL       FUN_140273850                                    undefined FUN_140273850()
			<Target Type="Indirect" Offset="@call" Symbol="ObjectPool__esv_ScriptParam_Release" />
		</Mapping>
		<Mapping Name="ls::Effect::UpdateIsVisible patch">
			@patch 75 05 //          JNZ        LAB_1407aa5e1
			@call e8 8f b9 03 00 //      CALL       ls::MoveableObject::CheckVisible                 undefined CheckVisible()
			0f b7 4f 1c //    MOVZX      ECX,word ptr [RDI + 0x1c]
			85 c0 //          TEST       EAX,EAX
			0f b6 83 6a 02 00 00 //      MOVZX      EAX,byte ptr [RBX + 0x26a]
			40 0f 95 c6 //    SETNZ      SIL
			0a 83 69 02 00 00 //      OR         AL,byte ptr [RBX + 0x269]
			<Patch Type="Absolute" Offset="@patch">
				90 90 90 90 90 90 90
			</Patch>
			<Target Type="Indirect" Offset="@call" Symbol="MoveableObject_CheckVisible" />
		</Mapping>
		<Mapping Name="ls::Effect::UpdateIsVisible">
			@call 48 8d 05 39 00 00 00 //      LEA        RAX,[ls::Effect::UpdateIsVisible_m]
			48 89 83 18 01 00 00 //      MOV        qword ptr [RBX + 0x118],RAX=>ls::Effect::Updat
			80 a3 40 02 00 00 fe //      AND        byte ptr [RBX + 0x240],0xfe
			48 8b 03 //       MOV        RAX,qword ptr [RBX]
			ff 90 c0 00 00 00  //       CALL       qword ptr [RAX + 0xc0]=>->FUN_1407a77c0          undefined FUN_1407a77c0()
			<Target Type="Indirect" Offset="@call" Symbol="Effect_UpdateIsVisible" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::DegradeDurability">
			e8 9f 77 02 00 //       CALL       CDivinityStats_Character::HasTalent              bool HasTalent(CDivinityStats_Ch
			b9 32 00 00 00 //      MOV        ECX,0x32
			41 b8 64 00 00 00 //      MOV        R8D,0x64
			84 c0 //          TEST       AL,AL
			8b d3 //          MOV        EDX,EBX
			44 0f 45 c1 //    CMOVNZ     R8D,ECX
			48 8b ce //       MOV        RCX,RSI
			@call e8 84 4a fe ff //      CALL       CDivinityStats_Item::DegradeDurability           undefined DegradeDurability()
			<Target Type="Indirect" Offset="@call" Symbol="CDivinityStats_Item_DegradeDurability" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetDefenseDamageReduction">
			@call e8 d7 fe fe ff //      CALL       CDivinityStats_Character::GetDefenseDamageRedu   float GetDefenseDamageReductionA
			ba 01 00 00 00 //      MOV        EDX,0x1
			48 8b cf //       MOV        RCX,RDI
			f3 0f 59 05 23 14 2e 00 //      MULSS      XMM0,dword ptr [DAT_14111199c]                   = 42C80000h
			<Target Type="Indirect" Offset="@call" Symbol="CDivinityStats_Character_GetDefenseDamageReduction" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetDefenseFromLevel">
			@call e8 f0 97 00 00 //      CALL       CDivinityStats_Character::GetDefenseFromLevel    undefined GetDefenseFromLevel()
			85 c0 //          TEST       EAX,EAX
			0f 8e 8e 00 00 00 //      JLE        LAB_140e204e6
			66 0f 6e c8 //    MOVD       XMM1,EAX
			<Target Type="Indirect" Offset="@call" Symbol="CDivinityStats_Character_GetDefenseFromLevel" />
		</Mapping>
		<Mapping Name="ecl::EocUIControl::ShowCommonMessageBox">
			49 8b cb //       MOV        RCX,R11
			@call e8 60 95 e3 ff //      CALL       ecl::EocUIControl::ShowCommonMessageBox          undefined ShowCommonMessageBox(e
			80 7c 24 50 00 //      CMP        byte ptr [RSP + local_d08],0x0
			<Target Type="Indirect" Offset="@call" Symbol="ecl_EocUIControl_ShowCommonMessageBox" />
		</Mapping>
		<Mapping Name="esv::Character::UpdateOverEncumbered patch">
			48 8b ce //       MOV        character,RSI
			0f af c3 //       IMUL       EAX,EBX
			ff c0 //          INC        EAX
			69 d8 10 27 00 00 //       IMUL       EBX,EAX,0x2710
			e8 72 af 02 00 //      CALL       FUN_140bd0240                                    undefined FUN_140bd0240()
			3b c3 //          CMP        EAX,EBX
			@patch 7e 27 //          JLE        LAB_140ba52f9
			8b 05 00 79 74 00 //      MOV        EAX,dword ptr [DAT_1412ecbd8]                    = ??
			4c 8d 44 24 30 //       LEA        R8=>local_res8,[RSP + 0x30]
			ba 33 00 00 00 //      MOV        EDX,0x33
			<Patch Type="Absolute" Offset="@patch">
				71 27
			</Patch>
			<!-- jump if not overflow (ie. always, not entering the "if") -->
		</Mapping>
		<Mapping Name="esv::Item::GenerateTreasure">
			48 8b d7 //       MOV        RDX,RDI
			48 8b cb //       MOV        RCX,RBX
			@call e8 13 00 00 00 //      CALL       esv::Item::GenerateTreasure                      undefined GenerateTreasure(esv::
			48 8b 5c 24 30 //      MOV        RBX,qword ptr [RSP + local_res8]
			b0 01 //          MOV        AL,0x1
			48 83 c4 20 //    ADD        RSP,0x20
			<Target Type="Indirect" Offset="@call" Symbol="esv_Item_GenerateTreasure" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetAbilityBoostFromPrimaryStat">
			@call e8 ee 2a 28 00 //      CALL       CDivinityStats_Character::GetAbilityBoostFromP   undefined GetAbilityBoostFromPri
			45 33 c0 //       XOR        R8D,R8D
			48 8b cf //       MOV        param_1,RDI
			41 8d 50 26 //    LEA        param_2,[R8 + 0x26]
			03 e8 //          ADD        EBP,EAX
			@call2 e8 fd ee 2a 00 //      CALL       CDivinityStats_Character::HasTalent              bool HasTalent(CDivinityStats_Ch
			84 c0 //          TEST       AL,AL
			74 02 //          JZ         LAB_140b9df19
			ff c5 //          INC        luckyCharm
			45 33 c0 //       XOR        R8D,R8D
			48 8b cf //       MOV        param_1,RDI
			41 8d 50 09 //    LEA        param_2,[R8 + 0x9]
			e8 b8 8c 28 00 //      CALL       CDivinityStats_Character::GetTraitValue          undefined GetTraitValue(CDivinit
			<Target Type="Indirect" Offset="@call" Symbol="CDivinityStats_Character_GetAbilityBoostFromPrimaryStat" />
			<Target Type="Indirect" Offset="@call2" Symbol="CDivinityStats_Character_HasTalent" />
		</Mapping>
	</Mappings>
</BinaryMappings>
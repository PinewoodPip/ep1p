<?xml version="1.0" encoding="utf-8"?>
<BinaryMappings>
	<Mappings Version="2.0.119.430" Default="true">
		<DllImport Symbol="IgSetWarningCallback" Module="iggy_w64.dll" Proc="IggySetWarningCallback" />
		<DllImport Symbol="IgSetTraceCallbackUTF8" Module="iggy_w64.dll" Proc="IggySetTraceCallbackUTF8" />
		
		<Mapping Name="ls::UIObjectManager::CreateUIObject">
			48 8b cf
			48 c7 44 24 28 80 00 00 00
			c7 44 24 20 20 1e 00 00
			@func e8 ?? ?? ?? ?? // CALL       ls::UIObjectManager::CreateUIObject              ObjectHandle CreateUIObject
			<Target Type="Indirect" Offset="@func" Symbol="UIObjectManager__CreateUIObject" /> <!-- ls::UIObjectManager::CreateUIObject -->
		</Mapping>
		<Mapping Name="ls::UIObjectManager::GetUIObjectByType">
			74 38 // JZ
			48 8b 0d c8 6f ad 00 // MOV
			ba 5e 00 00 00 // MOV
			@func e8 46 c3 f4 ff // CALL
			<Target Type="Indirect" Offset="@func" Symbol="UIObjectManager__GetUIObjectByType" /> <!-- ls::UIObjectManager::GetUIObjectByType -->
		</Mapping>
		<Mapping Name="ls::UIObjectManager">
			@instance 48 8b 0d ?? ?? ?? ?? // MOV UIObjectManager
			4d 8b c4 // MOV
			ba 04 00 00 00 // MOV
			48 81 c1 e0 00 00 00 // ADD
			@register e8 ?? ?? ?? ?? // CALL RegisterUIObjectCreator
			<Target Type="Indirect" Offset="@instance" Symbol="UIObjectManager__Instance" />
			<Target Type="Indirect" Offset="@register" Symbol="UIObjectManager__RegisterUIObjectCreator" />
			<!-- ls::UIObjectManager -->
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetFireResistance">
			ff 15 95 35 2f 00 //        CALL       qword ptr [->MSVCR120.DLL::_stricmp]             = 0127fa30
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9619
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 fb 0b 14 00 //        CALL       CDvinityStats_Character::GetFireResistance       undefined GetFireResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetFireResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetEarthResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce964f
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 75 1a 14 00 //       CALL       CDivinityStats_Character::GetEarthResistance     undefined GetEarthResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetEarthResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetWaterResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9685
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 9f 10 14 00 //       CALL       CDivinityStats_Character::GetWaterResistance     undefined GetWaterResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetWaterResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetAirResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce96bb
			48 8b 5f 40 //    MOV        RBX,qword ptr [RDI + 0x40]
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 79 15 14 00 //       CALL       CDivinityStats_Character::GetAirResistance       undefined GetAirResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetAirResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetPoisonResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce96f1
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 e7 25 14 00 //       CALL       CDivinityStats_Character::GetPoisonResistance    undefined GetPoisonResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetPoisonResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetPiercingResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9727
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 b1 20 14 00 //       CALL       CDivinityStats_Character::GetPiercingResistance  undefined GetPiercingResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetPiercingResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetCrushingResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce975d
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 fb 22 14 00 //      CALL       CDivinityStats_Character::GetCrushingResistance  undefined GetCrushingResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetCrushingResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetSlashingResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce9793
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 c5 1d 14 00 //      CALL       CDivinityStats_Character::GetSlashingResistance  undefined GetSlashingResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetSlashingResistance" />
		</Mapping>
		<Mapping Name="CDivinityStats_Character::GetShadowResistance">
			85 c0 //          TEST       EAX,EAX
			75 22 //          JNZ        LAB_140ce97c9
			b2 01 //          MOV        DL,offset s_rushingResistance_1410bc600+1        = "rushingResistance"
			48 8b ce //       MOV        RCX,RSI
			@getter e8 0f 28 14 00 //      CALL       CDivinityStats_Character::GetShadowResistance    undefined GetShadowResistance()
			<Target Type="Indirect" Offset="@getter" Symbol="CDivinityStats_Character__GetShadowResistance" />
		</Mapping>
		<Mapping Name="EoCFree">
			48 83 7b 18 10 //       CMP        qword ptr [RBX + 0x18],0x10
			72 08 //          JC         LAB_14002dbfc
			48 8b 0b //       MOV        RCX,qword ptr [RBX]
			@free e8 a4 41 6e 00 //       CALL       FUN_140711da0
			<Target Type="Indirect" Offset="@free" Symbol="EoCFree" />
		</Mapping>
		<Mapping Name="EoCAlloc">
			40 53 //          PUSH       RBX
			48 83 ec 20 //    SUB        RSP,0x20
			48 8b d9 //       MOV        RBX,RCX
			c7 01 43 00 00 00 //       MOV        dword ptr [RCX],0x43
			c7 41 10 00 00 00 00 //       MOV        dword ptr [RCX + 0x10],0x0
			b9 18 02 00 00 //       MOV        ECX,0x218
			@alloc e8 f0 78 db ff //       CALL       ls::GlobalAllocator::Malloc_m                    undefined Malloc_m()
			<Target Type="Indirect" Offset="@alloc" Symbol="EoCAlloc" />
		</Mapping>
		<Mapping Name="ls::ObjectFactory__ecl_Character">
			74 2e //          JZ         LAB_140aa7057
			@factory 48 8b 15 58 79 8a 00 //       MOV        RDX,qword ptr [ls_ObjectFactory__ecl_Character]  = ??
			0f b7 c8 //       MOVZX      ECX,AX
			3b 4a 24 //       CMP        ECX,dword ptr [RDX + 0x24]
			73 1f //          JNC        LAB_140aa7057
			48 8b 4a 40 //    MOV        RCX,qword ptr [RDX + 0x40]
			44 0f b7 f8 //    MOVZX      R15D,AX
			c1 e8 10 //       SHR        EAX,0x10
			66 23 c7 //       AND        AX,DI
			66 42 3b 04 79 //       CMP        AX,word ptr [RCX + R15*0x2]
			75 0a //          JNZ        LAB_140aa7057
			48 8b 42 18 //    MOV        RAX,qword ptr [RDX + 0x18]
			4e 8b 3c f8 //    MOV        R15,qword ptr [RAX + R15*0x8]
			eb 03 //          JMP        LAB_140aa705a
			<Target Type="Indirect" Offset="@factory" Symbol="ObjectFactory__ecl_Character" />
		</Mapping>
		<Mapping Name="ecl::PickingHelper::DoPick">
			49 8b 40 18 //    MOV        RAX,qword ptr [R8 + 0x18]
			4a 83 3c d0 00 //      CMP        qword ptr [RAX + R10*0x8],0x0
			75 12 //          JNZ        LAB_140882b3d
			41 89 4e 6c //    MOV        dword ptr [R14 + 0x6c],param_1
			49 8b ce //       MOV        param_1,R14
			@call e8 39 62 0f 00 //      CALL       ecl::PickingHelper::DoPick                       undefined DoPick()
			8b 0d 9b a0 a6 00 //      MOV        param_1,dword ptr [DAT_1412ecbd8]                = ??
			<Target Type="Indirect" Offset="@call" Symbol="ecl_PickingHelper_DoPick" />
		</Mapping>
		<Mapping Name="ecl::EocUIControl::OpenExamineUI">
			@EocUIControlRef 48 8b 0d 6a a5 93 00 //       MOV        targetAction,qword ptr [EoCUIControl]            = ??
			4c 8d 45 6f //    LEA        param_3=>local_res10,[RBP + 0x6f]
			41 0f b7 d6 //    MOVZX      character,R14W
			@call e8 2d 32 e5 ff //      CALL       ecl::UIExamine::OpenExamineUI                    void OpenExamineUI(EocUIControl
			<Target Type="Indirect" Offset="@call" Symbol="ecl_EocUIControl_OpenExamineUI" />
			<Target Type="Indirect" Offset="@EocUIControlRef" Symbol="ecl_EocUIControl" />
		</Mapping>
		<Mapping Name="ls_InputManager_InjectInput">
			45 33 c0 //       XOR        R8D,R8D
			48 8b ce //       MOV        param_1,RSI
			@call e8 43 e3 ff ff //       CALL       ls::InputManager::InjectInput                    undefined InjectInput(InputManag
			<Target Type="Indirect" Offset="@call" Symbol="ls_InputManager_InjectInput" />
		</Mapping>
		<Mapping Name="esv_ActivationManager">
			0f 84 c0 00 00 00 //      JZ         LAB_140c07559
			@ref 48 8b 0d c8 75 74 00 //      MOV        RCX,qword ptr [esv_ActivationManager]            = NaP
			48 8b d3 //       MOV        RDX,RBX
			e8 78 3a 03 00 //      CALL       FUN_140c3af20                                    undefined FUN_140c3af20()
			48 83 bf 30 01 00 00 00 //       CMP        qword ptr [RDI + 0x130],0x0
			<Target Type="Indirect" Offset="@ref" Symbol="esv_ActivationManager" />
		</Mapping>
		<Mapping Name="SendItemUsedOsirisEvent">
			4c 8b c0 //       MOV        param_3,RAX
			@call e8 89 b9 05 00 //      CALL       SendOsirisItemUsedEvent_wut                      undefined SendOsirisItemUsedEven
			48 8b 0d 2a 3e 7a 00 //      MOV        param_1,qword ptr [DAT_14134ea78]                = ??
			4d 8b c7 //       MOV        param_3,R15
			49 8b d6 //       MOV        param_2,R14
			e8 17 36 08 00 //      CALL       FUN_140c2e270                                    undefined FUN_140c2e270()
			<Target Type="Indirect" Offset="@call" Symbol="esv_OsirisCharacterFunctions_SendItemUsedEvent" />
		</Mapping>
		<Mapping Name="esv::ActivationManager::ThrowOnCharacterItemEvent">
			4c 89 74 24 50 //      MOV        qword ptr [RSP + local_res18],R14
			@call e8 7f a2 03 00 //      CALL       esv::ActivationManager::ThrowOnCharacterItemEv   undefined ThrowOnCharacterItemEv
			48 8b 0d 68 d3 74 00 //      MOV        param_1,qword ptr [DAT_14134ead0]                = ??
			48 85 ff //       TEST       RDI,RDI
			74 0c //          JZ         LAB_140c01779
			<Target Type="Indirect" Offset="@call" Symbol="esv_ActivationManager_ThrowOnCharacterItemEvent" />
		</Mapping>
		<Mapping Name="OsirisCharacterEventManager">
			e8 15 60 08 00 //      CALL       FUN_140c30c20                                    undefined FUN_140c30c20()
			@ref 48 8b 35 d6 3e 7a 00 //      MOV        RSI,qword ptr [osiriseventmanager]               = ??
			49 8b 07 //       MOV        RAX,qword ptr [R15]
			48 8d 54 24 70 //      LEA        param_2=>local_2c8,[RSP + 0x70]
			49 8b cf //       MOV        param_1,R15
			<Target Type="Indirect" Offset="@ref" Symbol="OsirisCharacterEvents" />
		</Mapping>
		<Mapping Name="ecl::UIExamine::SetupInformation Loremaster patch">
			48 8b 5c 24 38 //      MOV        RBX,qword ptr [RSP + local_9f0]
			@patch 85 f6 //          TEST       ESI,ESI
			41 0f 48 f4 //    CMOVS      ESI,R12D
			89 74 24 48 //    MOV        dword ptr [RSP + loremaster],ESI
			eb 53 //          JMP        LAB_140950865
			<Patch Type="Absolute" Offset="@patch">
				be 05 00 00 00 90
			</Patch>
		</Mapping>
		<Mapping Name="ls::GlobalSwitches">
			e8 8e b3 90 ff //      CALL       FUN_140030510                                    undefined FUN_140030510()
			@instance 48 8b 15 b7 c9 bb 00 //       MOV        RDX,qword ptr [ls_GlobalSwitches]                = NaP
			48 83 c2 58 //    ADD        RDX,0x58
			<Target Type="Indirect" Offset="@instance" Symbol="GlobalSwitches" />
		</Mapping>
		<Mapping Name="esv_ScriptParam entity Getters">
			48 8b c8 //       MOV        RCX,RAX
			@itemgetter e8 cf 28 02 00 //      CALL       esv::ScriptParam::GetItem                        esv::Item * GetItem(esv::ScriptP
			eb 08 //          JMP        LAB_140bb950b
			48 8b c8 //       MOV        RCX,RAX
			@charactergetter e8 45 26 02 00 //      CALL       esv::ScriptParam::GetCharacter                   esv::Character * GetCharacter(es
			<Target Type="Indirect" Offset="@itemgetter" Symbol="esv_ScriptParam_GetItem" />
			<Target Type="Indirect" Offset="@charactergetter" Symbol="esv_ScriptParam_GetCharacter" />
		</Mapping>
		<Mapping Name="esv::ScriptParam::DontCare">
			41 80 e6 01 //    AND        R14B,0x1
			@ref 48 3b 0d 84 69 70 00 //      CMP        param_1,qword ptr [esv_ScriptParam_DontCare]     = ??
			48 8b f9 //       MOV        RDI,param_1
			75 14 //          JNZ        LAB_140bdc92d                                 undefined FUN_140bfb4e0()
			<Target Type="Indirect" Offset="@ref" Symbol="esv_ScriptParam_DontCare" />
		</Mapping>
		<Mapping Name="ecl::GameStateEventManager::ExecuteGameStateChangedEvent">
			74 0e //          JZ         LAB_140876ecd
			48 8b 0d 82 7a ad 00 //      MOV        param_1,qword ptr [DAT_14134e948]                = ??
			8b d6 //          MOV        param_2,ESI
			@call e8 93 bd 06 00 //      CALL       ecl::GameStateEventManager::ExecuteGameStateCh   undefined ExecuteGameStateChange
			<Target Type="Indirect" Offset="@call" Symbol="ecl_GameStateEventManager_ExecuteGameStateChangedEvent" />
		</Mapping>
		<Mapping Name="esv::ScriptParamPool::Release">
			48 8b 1d 33 3b 70 00 //      MOV        RBX,qword ptr [Pool_esv_ScriptParam_m]           = ??
			ff 50 08 //       CALL       qword ptr [RAX + 0x8]
			48 8d 4b 28 //    LEA        RCX,[RBX + 0x28]
			48 8b d7 //       MOV        RDX,RDI
			@call e8 d4 40 69 ff //      CALL       FUN_140273850                                    undefined FUN_140273850()
			<Target Type="Indirect" Offset="@call" Symbol="ObjectPool__esv_ScriptParam_Release" />
		</Mapping>
		<Mapping Name="ecl::EocUIControl::ShowCommonMessageBox">
			49 8b cb //       MOV        RCX,R11
			@call e8 60 95 e3 ff //      CALL       ecl::EocUIControl::ShowCommonMessageBox          undefined ShowCommonMessageBox(e
			80 7c 24 50 00 //      CMP        byte ptr [RSP + local_d08],0x0
			<Target Type="Indirect" Offset="@call" Symbol="ecl_EocUIControl_ShowCommonMessageBox" />
		</Mapping>
		<Mapping Name="esv::Character::UpdateOverEncumbered patch">
			48 8b ce //       MOV        character,RSI
			0f af c3 //       IMUL       EAX,EBX
			ff c0 //          INC        EAX
			69 d8 10 27 00 00 //       IMUL       EBX,EAX,0x2710
			e8 72 af 02 00 //      CALL       FUN_140bd0240                                    undefined FUN_140bd0240()
			3b c3 //          CMP        EAX,EBX
			@patch 7e 27 //          JLE        LAB_140ba52f9
			8b 05 00 79 74 00 //      MOV        EAX,dword ptr [DAT_1412ecbd8]                    = ??
			4c 8d 44 24 30 //       LEA        R8=>local_res8,[RSP + 0x30]
			ba 33 00 00 00 //      MOV        EDX,0x33
			<Patch Type="Absolute" Offset="@patch">
				71 27
			</Patch>
			<!-- jump if not overflow (ie. always, not entering the "if") -->
		</Mapping>
	</Mappings>
</BinaryMappings>